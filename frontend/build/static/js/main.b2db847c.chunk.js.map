{"version":3,"sources":["components/User.js","components/Menu.js","components/Footer.js","components/ToDo.js","components/ProjectItem.js","components/404.js","components/Auth.js","components/DefaultPage.js","components/ProjectForm.js","components/SearchProject.js","components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","id","username","firstName","lastName","email","UserList","users","deleteUsers","Container","Row","Col","className","Table","striped","bordered","hover","size","map","Menu","is_authenticated","logout","login","Navbar","Brand","Nav","style","marginRight","to","Header","marginLeft","onClick","Footer","TodoItem","todoitem","deleteTodo","project","taskText","createdAt","updatedAt","executiveUser","isActive","type","TodoList","todo","ProjectItem","todolist","forEach","push","name","repo","userId","find","ProjectItems","projects","useParams","filtered_project","filter","NotFound404","location","pathname","LoginForm","props","state","password","event","this","setState","target","value","get_token","preventDefault","onSubmit","handleSubmit","placeholder","onChange","handleChange","React","Component","DefaultPage","ProjectForm","createProject","selectedOptions","i","length","item","Form","Group","Label","fontWeight","name_project","multiple","handleUsersChange","SearchProject","toLowerCase","indexOf","searchProject","dataSearch","join","deleteProject","TodoForm","task_text","executive_user","createTodo","App","headers","get_headers","axios","delete","then","response","load_data","catch","error","console","log","data","post","get","load_projects","token","Cookies","set","localStorage","setItem","set_token","getItem","alert","get_token_from_storage","bind","exact","path","component","User","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2db847c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Container, Table, Row, Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nconst UserItem = ({user}) => {\r\n    return (\r\n        <tr>\r\n            <td>{user.id}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.firstName}</td>\r\n            <td>{user.lastName}</td>\r\n            <td>{user.email}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst UserList = ({users, deleteUsers}) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='col-lg-12 col-sm-12'>\r\n                    <h3 className='text-center mt-3'>Пользователи</h3>\r\n                    <Table striped bordered hover size='lg' className='mt-2'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Username</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Email</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {users.map((user) => <UserItem user={user}/>)}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport {Navbar, Container, Nav, Row, Col} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Menu = ({is_authenticated, logout, login}) => {\r\n    return(\r\n        <div className='bg-dark'>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='col-lg-12 col-sm-12 '>\r\n                        <Navbar>\r\n                            <Navbar.Brand className='text-light'>ToDo List</Navbar.Brand>\r\n                            <Nav>\r\n                                <li > <Link style={{marginRight: '10px'}} className=\"text-light\" to='/users/'>\r\n                                    Пользователи</Link></li>\r\n                                <li ><Link style={{marginRight: '10px'}} className=\"text-light\" to='/projects/'>Проекты</Link></li>\r\n                                <li ><Link style={{marginRight: '10px'}} className=\"text-light\" to='/todo/'>Задачи</Link></li>\r\n                                {is_authenticated() ?\r\n                                    <h6 className=\"text-light\" Header style={{marginRight: '10px', marginLeft: '10px'}}>{login} <button onClick={()=>{logout()}}>Выйти</button></h6> :\r\n                                    <Link style={{marginRight: '10px', marginLeft: '10px'}} className=\"text-light\"to='/login/'>Войти</Link>}\r\n                            </Nav>\r\n                        </Navbar>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col className='col-lg-12 col-sm-12  m-0'>\r\n                    <div  className='fixed-bottom bg-dark'>\r\n                        <p className='text-center text-light  '>Эти стили делал по аналогии с прошлым курсом и вроде получилось </p>\r\n                        <p className='text-center text-light  '>Copyright &copy; 2021 </p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default Footer;","import React from \"react\";\r\nimport {Container, Table, Row, Col} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst TodoItem = ({todoitem,deleteTodo}) => {\r\n    return (\r\n        <tr>\r\n            <td>{todoitem.project}</td>\r\n            <td>{todoitem.taskText}</td>\r\n            <td>{todoitem.createdAt}</td>\r\n            <td>{todoitem.updatedAt}</td>\r\n            <td>{todoitem.executiveUser}</td>\r\n            <td>{todoitem.isActive}</td>\r\n            <td><button onClick={()=>deleteTodo(todoitem.id)} className='btn-danger' type=\"button\">Удалить</button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst TodoList = ({todo,deleteTodo}) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='col-lg-12 col-sm-12'>\r\n                     <h3 className='text-center mt-3'>TODO-листы</h3>\r\n                    <Table striped bordered hover size='sm' className='mt-4 mb-4'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Project</th>\r\n                            <th>Text</th>\r\n                            <th>Create Date</th>\r\n                            <th>Update Date</th>\r\n                            <th>User</th>\r\n                            <th>Active</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {todo.map((todoitem) => <TodoItem todoitem={todoitem} deleteTodo={deleteTodo}/>)}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div><Link className=\"btn-warning p-1\" to=\"/todo/create\">Создать</Link></div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport {Container,  Row, Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useParams} from \"react-router-dom\";\r\n\r\nconst ProjectItem = ({project, users, todo}) => {\r\n    const todolist = []\r\n    todo.forEach((todoitem) => {\r\n        if (todoitem.project === project.id) {\r\n            todolist.push(todoitem.taskText, 'Поручено сотруднику с ID: ' + todoitem.executiveUser)\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <p>Название проекта: {project.name}</p>\r\n            <p>Ссылка на репозиторий: {project.repo}</p>\r\n            <p><b>Пользователи:</b> {project.users.map((userId) => {\r\n            // eslint-disable-next-line\r\n                return users.find((user) => user.id == userId).username + ' (id:' + users.find((user) => user.id == userId).id + '), '\r\n            })}</p>\r\n            <p><b>Задачи:</b> {todolist.map((todo) => todo + ', ')}</p>\r\n        </div>\r\n    )\r\n}\r\nconst ProjectItems = ({projects, users, todo}) => {\r\n    let {id} = useParams();\r\n    // eslint-disable-next-line\r\n    let filtered_project = projects.filter((project) => project.id == id)\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='col-lg-12 col-sm-12\r\n                mt-3'>\r\n                    <p> {filtered_project.map((project) => <ProjectItem project={project} users={users}\r\n                                                                        todo={todo}/>)}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProjectItems;","import React from 'react'\r\n\r\n\r\nconst NotFound404 = ({location}) => {\r\n    return (\r\n        <div>\r\n            <h1>Страница по адресу '{location.pathname}' не найдена</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound404","import React from 'react'\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {login: '', password: ''}\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        this.setState(\r\n                {\r\n                    [event.target.name]: event.target.value\r\n                }\r\n            );\r\n    }\r\n\r\n    handleSubmit(event) {\r\n      this.props.get_token(this.state.login, this.state.password)\r\n      event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <form onSubmit={(event)=> this.handleSubmit(event)}>\r\n            <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\r\n                   onChange={(event)=>this.handleChange(event)} />\r\n            <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\r\n                   onChange={(event)=>this.handleChange(event)} />\r\n            <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default LoginForm","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst DefaultPage = () => {\r\n    return (\r\n    <content>\r\n        <div>\r\n            Вы находитесь на главной странице.\r\n        </div>\r\n        <div>\r\n            Для начала работы необходимо войти в систему нажав на \"Войти\" в навигационной панели сверху.\r\n        </div>\r\n        <div>\r\n            После этого вы сможете работать в соответствии с выданными правами доступа.\r\n        </div>\r\n    </content>\r\n    )\r\n}\r\n\r\n\r\nexport default DefaultPage;\r\n","import React from \"react\";\r\nimport {Col, Container, Form, Row} from \"react-bootstrap\";\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '', repo: '', users: '',}\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createProject(this.state.name, this.state.repo, this.state.users)\r\n        event.preventDefault()\r\n    }\r\n\r\n    handleUsersChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n\r\n            this.setState({\r\n                'users': []\r\n            })\r\n            return;\r\n        }\r\n        let users = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            users.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({\r\n            'users': users\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className='col-lg-12 col-sm-6'>\r\n                            <Form onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label style={{fontWeight: \"bold\"}}>Создать проект</Form.Label>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Название проекта</Form.Label>\r\n                                    <input className='mt-2' style={{marginLeft: '10px'}} type=\"text\" name=\"name\"\r\n                                           value={this.state.name_project}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Ссылка на репозиторий</Form.Label>\r\n                                    <input className='mt-2' style={{marginLeft: '10px'}} type=\"text\" name=\"repo\"\r\n                                           value={this.state.repo}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <Form.Label>Выбрать пользователей</Form.Label>\r\n                                    <select className=\"form-control\" name=\"users\" multiple\r\n                                            onChange={(event) => this.handleUsersChange(event)}>\r\n                                        {this.props.users.map((item) => <option\r\n                                            value={item.id}>{item.username}</option>)}\r\n                                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <input className=\"btn-success\" type=\"submit\" value=\"Сохранить\"/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectForm","import React from \"react\";\r\nimport {Container, Table, Row, Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass SearchProject extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '', projects: '', }\r\n    }\r\n\r\n    dataSearch(event) {\r\n        if (event.target.value) {\r\n            const name = event.target.value.toLowerCase()\r\n            const filter = this.props.projects.filter(project => project.name.toLowerCase().indexOf(name) !== -1)\r\n            this.props.searchProject(name, filter)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3 className='text-center mt-3'>Проекты</h3>\r\n                        <div className=\"searchbar form-group\"><input value={this.state.name} name='name' id='7'\r\n                                                                     type=\"text\" className=\"form-control\"\r\n                                                                     placeholder=\"Поиск проекта по названию\"\r\n                                                                     onChange={(event) => this.dataSearch(event)}/>\r\n                        </div>\r\n                        <Table striped bordered hover size='sm' className='mt-4 mb-5'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Название проекта</th>\r\n                                <th>Ссылка на репозиторий</th>\r\n                                <th>ID пользователей</th>\r\n                                <th> </th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.props.projects.map((project) =>\r\n                                <tr>\r\n                                    <td><Link to={`${project.id}/`}> {project.name} </Link></td>\r\n                                    <td>{project.repo}</td>\r\n                                    <td>{project.users.join(', ')}</td>\r\n                                    <td>\r\n                                        <button onClick={() => this.props.deleteProject(project.id)}\r\n                                                className='btn-danger' type=\"button\">Удалить\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div><Link className=\"btn-warning p-1\" to=\"/project/create/\">Создать</Link></div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchProject\r\n","import React from \"react\";\r\nimport {Col, Container, Form, Row} from \"react-bootstrap\";\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {project: '',task_text: '', executive_user:'',}\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createTodo(this.state.project,this.state.task_text,this.state.executive_user)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <div>\r\n                <Container>\r\n                    <Row className='justify-content-center mt-4'>\r\n                        <Col className='col-lg-6 col-sm-6'>\r\n                            <Form onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label style={{fontWeight: \"bold\"}}>Создать Задачу</Form.Label>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Текст задачи</Form.Label>\r\n                                    <input className='mt-2' style={{marginLeft: '10px'}} type=\"text\" name=\"task_text\" value={this.state.task_text}\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <Form.Label>Выбрать пользователя</Form.Label>\r\n                                    <select className=\"form-control\" name=\"executive_user\"\r\n                            onChange={(event) => this.handleChange(event)}>\r\n                        {this.props.users.map((item) =>\r\n                            <option value={item.id}>\r\n                                {item.username}\r\n                            </option>)}\r\n                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                     <Form.Label>Выбрать проект</Form.Label>\r\n                                   <select className=\"form-control\" name=\"project\"\r\n                            onChange={(event) => this.handleChange(event)}>\r\n                        {this.props.projects.map((item) =>\r\n                            <option value={item.id}>\r\n                                {item.name}\r\n                            </option>)}\r\n                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <input className=\"btn-success\" type=\"submit\" value=\"Сохранить\"/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoForm","import './App.css';\r\nimport React from 'react'\r\nimport axios from \"axios\";\r\nimport Cookies from 'universal-cookie';\r\nimport UserList from \"./components/User\";\r\nimport Menu from \"./components/Menu\";\r\nimport Footer from \"./components/Footer\";\r\nimport TodoList from \"./components/ToDo\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport ProjectItems from \"./components/ProjectItem\";\r\nimport NotFound404 from './components/404.js';\r\nimport LoginForm from './components/Auth.js';\r\nimport DefaultPage from './components/DefaultPage.js';\r\nimport ProjectForm from \"./components/ProjectForm\";\r\nimport SearchProject from \"./components/SearchProject\";\r\nimport TodoForm from \"./components/TodoForm\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            'users': [],\r\n            'todo' :[],\r\n            'projects': [],\r\n            'token': '',\r\n            'login': ''\r\n        };\r\n    }\r\n\r\n    deleteProject(id) {\r\n        const headers = this.get_headers()\r\n        axios.delete(`http://127.0.0.1:8000/api/project/${id}`, {headers}).then(\r\n            response => {\r\n                this.load_data()\r\n            }\r\n        ).catch(error => {\r\n            console.log(error)\r\n            this.setState({projects: []})\r\n        })\r\n    }\r\n\r\n    createProject(name, repo, users) {\r\n    const headers = this.get_headers()\r\n    const data = {name: name, repo: repo, users: users}\r\n    axios.post(`http://127.0.0.1:8000/api/project/`, data, {headers})\r\n        .then(response => {\r\n            this.load_data()\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            this.setState({projects: []})\r\n        })\r\n    }\r\n\r\n    searchProject(name, filter) {\r\n        const headers = this.get_headers()\r\n        axios.get(`http://127.0.0.1:8000/api/project/`,  {headers})\r\n            .then(response => {\r\n                this.load_projects(filter)\r\n            }).catch(error => {\r\n            console.log(error)\r\n            this.setState({projects: []})\r\n        })\r\n    }\r\n\r\n    deleteTodo(id) {\r\n        const headers = this.get_headers()\r\n        axios.delete(`http://127.0.0.1:8000/api/todo/${id}`, {headers}).then(\r\n            response => {\r\n                this.load_data()\r\n            }\r\n        ).catch(error => {\r\n            console.log(error)\r\n            console.log(id)\r\n            this.setState({projects: []})\r\n        })\r\n    }\r\n\r\n    createTodo(project, task_text, executive_user) {\r\n        const headers = this.get_headers()\r\n        const data = {project: project, task_text: task_text, executive_user: executive_user}\r\n        axios.post('http://127.0.0.1:8000/api/todo/', data, {headers})\r\n            .then(response => {\r\n                this.load_data()\r\n            }).catch(error => {\r\n            console.log(error)\r\n            console.log(data)\r\n            this.setState({todo: []})\r\n        })\r\n    }\r\n\r\n    set_token(token, username) {\r\n        const cookies = new Cookies()\r\n        cookies.set('token', token)\r\n        localStorage.setItem('login', username)\r\n        this.setState({'token': token, 'login': username},() => this.load_data())\r\n    }\r\n\r\n    is_authenticated() {\r\n        return !!this.state.token\r\n    }\r\n\r\n    logout() {\r\n        this.set_token('')\r\n    }\r\n\r\n    get_token_from_storage() {\r\n        const cookies = new Cookies()\r\n        const token = cookies.get('token')\r\n        let username = localStorage.getItem('login')\r\n        this.setState({'token': token, 'login': username},() => this.load_data())\r\n    }\r\n\r\n    get_token(username, password) {\r\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {username: username, password: password})\r\n        .then(response => {\r\n            this.set_token(response.data['token'], username)\r\n        }).catch(error => alert('Неверный логин или пароль'))\r\n    }\r\n\r\n    get_headers() {\r\n        let headers = {'Content-Type': 'application/json'}\r\n        if (this.is_authenticated()){\r\n            headers['Authorization'] = 'Token ' + this.state.token\r\n        }\r\n        return headers\r\n    }\r\n\r\n    load_projects(projects){\r\n        this.setState(\r\n                    {'projects': projects}\r\n                )\r\n    }\r\n\r\n    load_data () {\r\n        const headers = this.get_headers()\r\n        axios.get('http://127.0.0.1:8000/api/users/', {headers}).then(\r\n            response => {\r\n                const users = response.data\r\n                this.setState(\r\n                    {'users': users}\r\n                )\r\n            }\r\n        ).catch(error => {console.log(error)\r\n        this.setState({users: []})}\r\n        )\r\n\r\n        axios.get('http://127.0.0.1:8000/api/todo/', {headers}).then(\r\n            response => {\r\n                const todo = response.data\r\n                this.setState(\r\n                    {'todo': todo}\r\n                )\r\n            }\r\n        ).catch(error => {console.log(error)\r\n        this.setState({todo: []})}\r\n        )\r\n\r\n        axios.get('http://127.0.0.1:8000/api/project/', {headers}).then(\r\n            response => {\r\n                const projects = response.data\r\n                this.setState(\r\n                    {'projects': projects}\r\n                )\r\n            }\r\n        ).catch(error => {console.log(error)\r\n        this.setState({projects: []})}\r\n        )\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.get_token_from_storage()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <div>\r\n                    <BrowserRouter>\r\n                    <Menu is_authenticated={this.is_authenticated.bind(this)}\r\n                          logout={() => {this.logout()}} login={this.state.login}/>\r\n                        <Switch>\r\n                            <Route exact path=\"/users/\" component={() => <UserList users={this.state.users}/>}/>\r\n                            <Route exact path=\"/todo/\" component={() => <TodoList todo={this.state.todo}\r\n                                                                          deleteTodo={(id) => this.deleteTodo(id)}/>}/>\r\n                            <Route exact path=\"/projects/\" component={() =>\r\n                                <SearchProject projects={this.state.projects}\r\n                                                deleteProject={(id) => this.deleteProject(id)}\r\n                                                searchProject={(name, filter)=>this.searchProject(name, filter)}/>}/>\r\n                            <Route exact path=\"/projects/:id/\" component = {() =>\r\n                                <ProjectItems projects={this.state.projects} users={this.state.users} todo={this.state.todo}/> }/>\r\n                            <Route exact path='/project/create/' component={() => <ProjectForm\r\n                                users={this.state.users}\r\n                            createProject={(name, repo, users) => this.createProject(name, repo, users)}/>}/>\r\n                            <Route exact path=\"/todo/create/\" component={() => <TodoForm users={this.state.users} projects={this.state.projects}\r\n                                                      createTodo={(project, task_text, executive_user) => this.createTodo(project, task_text, executive_user)}/>}/>\r\n                            <Route exact path='/login/' component={() => <LoginForm get_token={(username, password) =>\r\n                            this.get_token(username, password)} />} />\r\n                            <Route exact path='/' component={DefaultPage}/>\r\n                            <Route component={NotFound404}/>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}